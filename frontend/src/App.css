/* Calculate scale factor based on your reference screen (2560x1664) */
:root {
  --scale-factor: min(100vw / 2560px, 100vh / 1664px);
}

#root {
  /* Scale the original fixed values proportionally */
  max-width: calc(1280px * var(--scale-factor));
  margin: 0 auto;
  padding: calc(2rem * var(--scale-factor));
  text-align: center;
  
  /* Ensure the root takes full viewport to maintain proportions */
  min-height: 100vh;
  width: 100vw;
  box-sizing: border-box;
  
  /* Scale fonts proportionally too */
  font-size: calc(1rem * var(--scale-factor));
}

.logo {
  /* Scale original dimensions proportionally */
  height: calc(6em * var(--scale-factor));
  padding: calc(1.5em * var(--scale-factor));
  will-change: filter;
  transition: filter 300ms;
}

.logo:hover {
  /* Scale shadow blur proportionally */
  filter: drop-shadow(0 0 calc(2em * var(--scale-factor)) #646cffaa);
}

.logo.react:hover {
  /* Scale shadow blur proportionally */
  filter: drop-shadow(0 0 calc(2em * var(--scale-factor)) #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  /* Scale padding proportionally */
  padding: calc(2em * var(--scale-factor));
}

.read-the-docs {
  color: #888;
}

/* Ensure all child elements inherit the scaled font size */
* {
  box-sizing: border-box;
}

/* Optional: Add a minimum scale to prevent elements from becoming too small */
@media (max-width: 640px) {
  :root {
    --scale-factor: max(0.25, min(100vw / 2560px, 100vh / 1664px));
  }
}